// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId String @unique
  email    String @unique

  //outbound link. One to many relationship. Required
  entries JournalEntry[]
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //linking to foreign key
  userId String
  user   User   @relation(fields: [userId], references: [id])

  content String @db.Text

  //outbound link. One to One relationship. Optional
  analysis Analysis?

  //indexing array of foreign keys (used for one to many @unique is one to one)
  //@@index([userId])
  
  //compound unique to be able to find Entries by id, and userID so only owners can see their entries
  @@unique([userId, id])
}

model Analysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id])

  mood     String
  summary  String  @db.Text
  color    String
  negative Boolean

  @@unique([entryId])
}
